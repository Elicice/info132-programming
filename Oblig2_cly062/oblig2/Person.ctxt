#BlueJ class context
comment0.target=Person
comment0.text=\r\n\ \ Klasse\ Person\ har\ variablene\ String\ name\ og\ ArrayList<Person>\ friends.\r\n\ \ Klassen\ har\ en\ metode\ addFriend()\ som\ legger\ til\ et\ venneobjekt\ til\ en\ persons\ venneliste.\r\n\ \ Klassen\ har\ en\ metode\ printFriends()\ som\ printer\ ut\ navn\ p\u00E5\ venner.\r\n\ \ Klassen\ har\ en\ metode\ printFriendsStream()\ som\ printer\ ut\ navn\ p\u00E5\ venner\ ved\ hjelp\ av\ str\u00F8mmer.\r\n\ \ Klassen\ har\ en\ metode\ mostConnectedFriend()\ som\ returnerer\ den\ vennen\ med\ flest\ venner.\r\n\ @author\ Cecilie\ Lyshoel\r\n\ @version\ 03.10.2017\r\n
comment1.params=name
comment1.target=Person(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Person.\ When\ the\ object\r\n\ is\ created,\ the\ person's\ list\ of\ friends\ is\ empty.\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Method\ getName\ returns\ the\ person's\ name.\r\n\r\n\ @return\ The\ person's\ name\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getFriends()
comment3.text=\r\n\ Method\ getFriends\ returns\ an\ ArraList\ of\ Person-objects\ \r\n\ containing\ the\ person's\ friends.\ \r\n\r\n\ @return\ The\ list\ of\ the\ person's\ friends\r\n
comment4.params=friend
comment4.target=void\ addFriend(Person)
comment4.text=\r\n\ Method\ addFriend\ adds\ the\ given\ friend-object\ to\ this\r\n\ person's\ friend\ list.\ \r\n\r\n\ @param\ friend\ A\ new\ friend\ (added\ to\ the\ list\ of\ friends)\r\n
comment5.params=
comment5.target=void\ printFriends()
comment5.text=\r\n\ Metoden\ printFreinds\ skal\ printe\ ut\ en\ persons\ venner\r\n
comment6.params=
comment6.target=void\ printFreindsStream()
comment6.text=\r\n\ Metode\ printFriendsStream\ skal\ skrive\ ut\ navn\ p\u00E5\ en\ parsons\ venner\ ved\ hjelp\ av\ str\u00F8mmer\r\n\ bruke\ map\ for\ \u00E5\ lage\ egen\ liste\ med\ venner\ for\ den\ personen\r\n
comment7.params=
comment7.target=Person\ mostConnectedFriend()
comment7.text=\r\n\ Metode\ mostConnectedFriend\ vil\ returnere\ den\ vennen\ som\ selv\ har\ flest\ venner\r\n\ @param\ largestNetwork\ variabel\ for\ st\u00F8rste\ nettverksst\u00F8rrelse.\r\n\ @param\ friendWithLargestNetwork\ variabel\ for\ venn\ med\ st\u00F8rst\ nettverk\r\n\ @return\ friendWithLargestNetwork\ returnerer\ friend-objektet\ med\ flest\ antall\ venner.\r\n
numComments=8
